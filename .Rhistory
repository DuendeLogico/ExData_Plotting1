segunda<-primera[primera$clasificador==T,]
library(reshape2)
todosiguales<-function(x){
if(identical(x,rep(x[1],length(x)))){
rep(NA,length(x))
}else{x}
}
segunda
tercera<-segunda %>% mutate_each(funs(todosiguales))
str(segunda)
?identical
tercera<-as.data.frame(segunda) %>% mutate_each(funs(todosiguales))
tercera
tercera<-as.data.frame(segunda) %>% group_by(índice) %>% mutate_each(funs(todosiguales))
tercera<-as.data.frame(segunda) %>%  mutate_each(funs(todosiguales))
lala<-data.frame(a=c(1,3,5,7),b=c("ole","ole","ole","ole"),c=c(3,3,3,3),d=c(9,7,4,5))
lala<-tbl_df(lala)
lale<-lala %>% mutate_each(funs(todosiguales))
lale
class(segunda)
tercera<-ungroup(segunda) %>%  mutate_each(funs(todosiguales))
tercera
segunda
tercera<-segunda %>%  mutate_each(funs(todosiguales))
lala<-data.frame(a=c(1,3,5,7),b=c("ole","ole","ole","ole"),c=c(3,3,3,3),d=c(9,7,4,5))
lala<-tbl_df(lala)
lale<-lala %>% mutate_each(funs(todosiguales))
lale
lala<-data.frame(a=c(1,3,5,7),b=c("ole","ole","ole","ole"),c=c(3,3,3,3),d=c(9,7,4,5)),índice=c(2,2,4,4))
lala<-tbl_df(lala)
lala<-data.frame(a=c(1,3,5,7),b=c("ole","ole","ole","ole"),c=c(3,3,3,3),d=c(9,7,4,5)),índice=c(2,2,4,4))
lala<-data.frame(a=c(1,3,5,7),b=c("ole","ole","ole","ole"),c=c(3,3,3,3),d=c(9,7,4,5)),índice=c(2,2,4,4))
lala<-data.frame(a=c(1,3,5,7),b=c("ole","ole","ole","ole"),c=c(3,3,3,3),d=c(9,7,4,5),índice=c(2,2,4,4))
lala<-tbl_df(lala)
lale<-lala %>% mutate_each(funs(todosiguales))
lale
lale<-lala %>% group_by(índice) %>% mutate_each(funs(todosiguales))
lale
lala<-data.frame(a=c(1,3,5,7),b=c("ole","ole","heole","hole"),c=c(3,3,3,3),d=c(9,7,4,5),índice=c(2,2,4,4))
lala<-tbl_df(lala)
lale<-lala %>% group_by(índice) %>% mutate_each(funs(todosiguales))
lale
todosiguales(lala$b)
todosiguales(lala$b[1:2])
todosiguales(lala$b[3:4])
lala<-data.frame(a=c(1,3,5,7),b=c("ole","ole","heole","hole"),c=c(3,3,3,3),d=c(9,7,4,5),índice=c(2,2,4,4))
lala<-tbl_df(lala)
lale<-lala %>% group_by(índice) %>% mutate_each(funs(todosiguales))
lale<-lala %>% group_by(índice) %>% mutate_each(funs(todosiguales(.)))
lale<-lala %>% group_by(índice) %>% mutate_each(funs(mean))
lale
mean("hole")
?identical
lale<-lala %>% group_by(índice) %>% mutate_each(funs(mean))
lale
lale<-lala %>% group_by(índice) %>% mutate_each(funs(length))
lale
?last
lale<-lala %>% group_by(índice) %>% mutate_each(funs(last))
lale
str(lala)
str(segunda)
args(data.frame)
V1<-c("Johny","Kristy","Dami","Dami","Lucy","Bom","Bom","Lepe","María José","María Jose")
V2<-c(4,7,9,9,3,5,4,8,7,7)
índice<-c(1,2,3,3,4,5,5,6,7,7)
V3<-c("Johny punic","Kristy Davis","Dami el Mejón","Dami el Mejón","Lucinda","Bommy","Bommy","Lepe villa","Prieto","Prieto")
datos<-data.frame(V1,V2,índice,V3,stringsAsFactors=F)
library(dplyr)
primera<-datos %>% group_by(índice) %>% do({
clasificador<-nrow(.)==nrow(unique(.)) & nrow(.)>1
data.frame(.,clasificador)
})
segunda<-primera[primera$clasificador==T,]
library(reshape2)
todosiguales<-function(x){
if(identical(x,rep(x[1],length(x)))){
rep(NA,length(x))
}else{x}
}
segunda
tercera<-segunda %>%  mutate_each(funs(todosiguales))
str(segunda)
help(package="dplyr")
?transmute
tercera<-segunda %>%  transmute_each(funs(todosiguales))
tbl_vars(segunda)
explain(segunda)
tercera<-segunda %>%  transmute_each(funs(todosiguales))
tercera<-segunda %>% mutate_each(funs(todosiguales))
?index
location(segunda)
lale<-lala %>% group_by(índice) %>% mutate_each(funs(last))
lale
lale<-lala %>% group_by(índice) %>% mutate_each(funs(means))                                                     ))
lale<-lala %>% group_by(índice) %>% mutate_each(funs(means))                                                   ))
lale<-lala %>% group_by(índice) %>% mutate_each(funs(means))                       ))
lale<-lala %>% group_by(índice) %>% mutate_each(funs(means))
lale<-lala %>% group_by(índice) %>% mutate_each(funs(mean))
lale
?funs
tercera<-segunda %>% mutate_each(funs(todosiguales))
segunda
mutate_each
?mutate_each
tercera<-segunda %>% mutate_each(funs(todosiguales),V1)
tercera<-segunda %>% mutate_each(funs(todosiguales),V2)
tercera<-segunda %>% mutate_each(funs(todosiguales),V3)
tercera
tercera<-segunda %>% mutate_each(funs(todosiguales),clasificador)
tercera
tercera<-segunda %>% group_by(índice) %>% mutate_each(funs(todosiguales),clasificador)
tercera
tercera<-segunda %>% group_by(índice) %>% mutate_each(funs(todosiguales),V2)
class(a)
zz<-c("ble","ble","ble")
class(zz)
class(todosiguales(zz))
?class
todosiguales<-function(x){
clase<-class(x)
if(identical(x,rep(x[1],length(x)))){
solución<-rep(NA,length(x))
class(solución)<-clase
}else{x}
}
zz
class(zz)
class(todosiguales(zz))
tercera<-segunda %>% group_by(índice) %>% mutate_each(funs(todosiguales),V2)
todosiguales(zz)
todosiguales<-function(x){
clase<-class(x)
if(identical(x,rep(x[1],length(x)))){
solución<-rep(NA,length(x))
class(solución)<-clase
return(solución)
}else{x}
}
todosiguales(zz)
class(todosiguales(zz))
segunda
tercera<-segunda %>% group_by(índice) %>% mutate_each(funs(todosiguales),V2)
tercera<-segunda %>% group_by(índice) %>% mutate_each(funs(todosiguales))
tercera
todosiguales<-function(x){
class(x)<-"character"
if(identical(x,rep(x[1],length(x)))){
solución<-rep(NA,length(x))
return(solución)
}else{
return(x)}
}
segunda
tercera<-segunda %>% group_by(índice) %>% mutate_each(funs(todosiguales))
zz
class(zz)
todosiguales<-function(x){
x<-as.character(x)
if(identical(x,rep(x[1],length(x)))){
solución<-rep(NA,length(x))
return(solución)
}else{
return(x)}
}
segunda
tercera<-segunda %>% group_by(índice) %>% mutate_each(funs(todosiguales))
tercera<-segunda %>%
group_by(índice) %>%
mutate_each(funs(as.character))
tercera
str(tercera)
tercera<-segunda %>%
group_by(índice) %>%
mutate_each(funs(as.character))
mutate_each(funs(todosiguales))
tercera<-segunda %>%
group_by(índice) %>%
mutate_each(funs(as.character)) %>%
mutate_each(funs(todosiguales))
todosiguales<-function(x){
clase<-class(x)
if(identical(x,rep(x[1],length(x)))){
solución<-rep(NA,length(x))
class(solución)<-clase
return(solución)
}else{
return(x)}
}
tercera<-segunda %>%
group_by(índice) %>%
mutate_each(funs(todosiguales))
tercera
str(tercera)
tercera<-segunda %>%
group_by(índice) %>%
mutate_each(funs(as.character)) %>%
mutate_each(funs(todosiguales))
tercera
str(tercera)
tercera<-segunda %>%
group_by(índice) %>%
mutate_each(funs(as.character)) %>%
mutate_each(funs(todosiguales))
mutate_each(funs(function(x)x[x==NA]<-"--"))
tercera<-segunda %>%
group_by(índice) %>%
mutate_each(funs(as.character)) %>%
mutate_each(funs(todosiguales)) %>%
mutate_each(funs(function(x)x[x==NA]<-"--"))
zz<-c("ble","ble","ble",NA)
class(zz)
class(todosiguales(zz))
function (x) x[x==NA]<-"--"
rayas<-function (x) x[x==NA]<-"--"
zz
rayas(zz)
zz
zz[zz==NA]<-"--"
zz
zz[identical(zz,NA)]<-"--"
zz
?NA
rayas<-function (x) is.na(x)<-"--"
zz
rayas(zz)
zz
rayas<-function (x) is.na(x)<-"--";x
x
rayas<-function (x){
x[is.na(x)]<-"--"
return(x)
}
rayas(zz)
tercera<-segunda %>%
group_by(índice) %>%
mutate_each(funs(as.character)) %>%
mutate_each(funs(todosiguales)) %>%
mutate_each(funs(rayas))
tercera
installed.packages()
class(installed.packages())
dim(installed.packages())
installed.packages()[,2]
installed.packages()[,1]
names(installed.packages()[,1])
"dplyr" %in% names(installed.packages()[,1])
"ggplot" %in% names(installed.packages()[,1])
names(installed.packages()[,1])
"ggplot" %in% names(installed.packages()[,1])
!("dplyr" %in% names(installed.packages()[,1]))
if (!("dplyr" %in% names(installed.packages()[,1]))){
install.packages("dplyr")
}
if (!("ggvis" %in% names(installed.packages()[,1]))){
install.packages("ggvis")
}
find.packages("dplyr")
find.package("dplyr")
find.package("dplyr3")
?require
?if
?if
()
if (!require("dplyr")){
install.packages("dplyr")
}
if (!require("dplyr")){
install.packages("dplyr")
}
if (!require("ggplele")){
install.packages("ggplele")
}
ls()
search()
if (!require("dplyr")){
install.packages("dplyr")
}
search()
search()
require("dplyr")
require("ddgee")
require("dplyr")
?library
.packages(all=T)
require("ggplot")
require("ggplot2")
if (!require("ggplot2")){
install.packages("ggplot2")
}
search()
getwd()
setwd("/Users/Damian/Documents/ExData_Plotting1")
if(!file.exists("datos")) {
dir.create("datos")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./datos/datoscomprimidos.zip",method="curl")
dateDownloaded<-date()
unzip("./datos/datoscomprimidos.zip",exdir="./datos")
datos.raw<-read.table("./datos/household_power_consumption.txt",
header=T,
sep=";",
na.strings="?",
stringsAsFactors=F)
#Creamos nueva dataframe seleccionando sólo las dos fechas que interesan, para que no pese tanto
datos<-datos.raw[datos.raw$Date %in% c("1/2/2007","2/2/2007"),]
#We create a character variable pasting the Date with the Time
datos$momento<-paste(datos$Date,datos$Time)
#We add a POSIXlt variable
datos$momento2<-strptime(datos$momento,format="%e/%m/%Y %H:%M:%S")
png(filename="Plot1",width=480,height=480)
hist(datos$Global_active_power,
main="Global Active Power",
xlab="Global Active Power (kilowatts)",
col="red",
ylim=c(0,1200)
)
dev.off()
setwd("/Users/Damian/Documents/ExData_Plotting1")
if(!file.exists("datos")) {
dir.create("datos")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./datos/datoscomprimidos.zip",method="curl")
dateDownloaded<-date()
unzip("./datos/datoscomprimidos.zip",exdir="./datos")
datos.raw<-read.table("./datos/household_power_consumption.txt",
header=T,
sep=";",
na.strings="?",
stringsAsFactors=F)
#Creamos nueva dataframe seleccionando sólo las dos fechas que interesan, para que no pese tanto
datos<-datos.raw[datos.raw$Date %in% c("1/2/2007","2/2/2007"),]
#We create a character variable pasting the Date with the Time
datos$momento<-paste(datos$Date,datos$Time)
#We add a POSIXlt variable
datos$momento2<-strptime(datos$momento,format="%e/%m/%Y %H:%M:%S")
Sys.setlocale("LC_TIME","en_US.UTF-8") #changes the locale so that weekdays appear in english
png(filename="Plot2",width=480,height=480)
plot(datos$momento2,datos$Global_active_power,
ylab="Global Active Power (kilowatts)",
type="l",
xlab="")
dev.off()
Sys.setlocale("LC_TIME","es_ES.UTF-8") #Changes the locale again to its original value
setwd("/Users/Damian/Documents/ExData_Plotting1")
if(!file.exists("datos")) {
dir.create("datos")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./datos/datoscomprimidos.zip",method="curl")
dateDownloaded<-date()
unzip("./datos/datoscomprimidos.zip",exdir="./datos")
datos.raw<-read.table("./datos/household_power_consumption.txt",
header=T,
sep=";",
na.strings="?",
stringsAsFactors=F)
#Creamos nueva dataframe seleccionando sólo las dos fechas que interesan, para que no pese tanto
datos<-datos.raw[datos.raw$Date %in% c("1/2/2007","2/2/2007"),]
#We create a character variable pasting the Date with the Time
datos$momento<-paste(datos$Date,datos$Time)
#We add a POSIXlt variable
datos$momento2<-strptime(datos$momento,format="%e/%m/%Y %H:%M:%S")
Sys.setlocale("LC_TIME","en_US.UTF-8") #changes the locale so that weekdays appear in english
png(filename="Plot3",width=480,height=480)
plot(datos$momento2,datos$Sub_metering_1,
ylab="Energy sub metering",
type="l",
xlab="")
lines(datos$momento2,datos$Sub_metering_2,col="red")
lines(datos$momento2,datos$Sub_metering_3,col="blue")
legend("topright",col=c("black","red","blue"),lty=1,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
Sys.setlocale("LC_TIME","es_ES.UTF-8") #Changes the locale again to its original value
setwd("/Users/Damian/Documents/ExData_Plotting1")
if(!file.exists("datos")) {
dir.create("datos")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./datos/datoscomprimidos.zip",method="curl")
dateDownloaded<-date()
unzip("./datos/datoscomprimidos.zip",exdir="./datos")
datos.raw<-read.table("./datos/household_power_consumption.txt",
header=T,
sep=";",
na.strings="?",
stringsAsFactors=F)
#Creamos nueva dataframe seleccionando sólo las dos fechas que interesan, para que no pese tanto
datos<-datos.raw[datos.raw$Date %in% c("1/2/2007","2/2/2007"),]
#We create a character variable pasting the Date with the Time
datos$momento<-paste(datos$Date,datos$Time)
#We add a POSIXlt variable
datos$momento2<-strptime(datos$momento,format="%e/%m/%Y %H:%M:%S")
png(filename="Plot1.png",width=480,height=480)
hist(datos$Global_active_power,
main="Global Active Power",
xlab="Global Active Power (kilowatts)",
col="red",
ylim=c(0,1200)
)
dev.off()
setwd("/Users/Damian/Documents/ExData_Plotting1")
if(!file.exists("datos")) {
dir.create("datos")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./datos/datoscomprimidos.zip",method="curl")
dateDownloaded<-date()
unzip("./datos/datoscomprimidos.zip",exdir="./datos")
datos.raw<-read.table("./datos/household_power_consumption.txt",
header=T,
sep=";",
na.strings="?",
stringsAsFactors=F)
#We create a new dataframe, selecting only the two dates that interest us
datos<-datos.raw[datos.raw$Date %in% c("1/2/2007","2/2/2007"),]
#We create a character variable pasting the Date with the Time
datos$momento<-paste(datos$Date,datos$Time)
#We add a POSIXlt variable
datos$momento2<-strptime(datos$momento,format="%e/%m/%Y %H:%M:%S")
#We create the plot
Sys.setlocale("LC_TIME","en_US.UTF-8") #changes the locale so that weekdays appear in english
png(filename="Plot2.png",width=480,height=480)
plot(datos$momento2,datos$Global_active_power,
ylab="Global Active Power (kilowatts)",
type="l",
xlab="")
dev.off()
Sys.setlocale("LC_TIME","es_ES.UTF-8") #Changes the locale again to its original value
setwd("/Users/Damian/Documents/ExData_Plotting1")
if(!file.exists("datos")) {
dir.create("datos")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./datos/datoscomprimidos.zip",method="curl")
dateDownloaded<-date()
unzip("./datos/datoscomprimidos.zip",exdir="./datos")
datos.raw<-read.table("./datos/household_power_consumption.txt",
header=T,
sep=";",
na.strings="?",
stringsAsFactors=F)
#We create a new dataframe selecting only the two dates that interest us
datos<-datos.raw[datos.raw$Date %in% c("1/2/2007","2/2/2007"),]
#We create a character variable pasting the Date with the Time
datos$momento<-paste(datos$Date,datos$Time)
#We add a POSIXlt variable
datos$momento2<-strptime(datos$momento,format="%e/%m/%Y %H:%M:%S")
#We create the plot
Sys.setlocale("LC_TIME","en_US.UTF-8") #changes the locale so that weekdays appear in english
png(filename="Plot3.png",width=480,height=480)
plot(datos$momento2,datos$Sub_metering_1,
ylab="Energy sub metering",
type="l",
xlab="")
lines(datos$momento2,datos$Sub_metering_2,col="red")
lines(datos$momento2,datos$Sub_metering_3,col="blue")
legend("topright",col=c("black","red","blue"),lty=1,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
Sys.setlocale("LC_TIME","es_ES.UTF-8") #Changes the locale again to its original value
setwd("/Users/Damian/Documents/ExData_Plotting1")
if(!file.exists("datos")) {
dir.create("datos")
}
fileUrl<-"https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./datos/datoscomprimidos.zip",method="curl")
dateDownloaded<-date()
unzip("./datos/datoscomprimidos.zip",exdir="./datos")
datos.raw<-read.table("./datos/household_power_consumption.txt",
header=T,
sep=";",
na.strings="?",
stringsAsFactors=F)
#We create a new dataframe selecting only the two dates that interest us
datos<-datos.raw[datos.raw$Date %in% c("1/2/2007","2/2/2007"),]
#We create a character variable pasting the Date with the Time
datos$momento<-paste(datos$Date,datos$Time)
#We add a POSIXlt variable
datos$momento2<-strptime(datos$momento,format="%e/%m/%Y %H:%M:%S")
#We create the plot
Sys.setlocale("LC_TIME","en_US.UTF-8") #changes the locale so that weekdays appear in english
png(filename="Plot4.png",width=480,height=480)
par(mfcol=c(2,2))
par(cex.lab=0.8)
plot(datos$momento2,datos$Global_active_power,
ylab="Global Active Power",
type="l",
xlab="")
plot(datos$momento2,datos$Sub_metering_1,
ylab="Energy sub metering",
type="l",
xlab="")
lines(datos$momento2,datos$Sub_metering_2,col="red")
lines(datos$momento2,datos$Sub_metering_3,col="blue")
legend("topright",
col=c("black","red","blue"),
lty=1,
legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
bty="n",
cex=0.8)
plot(datos$momento2,datos$Voltage,
type="l",
xlab="datetime",
ylab="Voltage")
plot(datos$momento2,datos$Global_reactive_power,
type="l",
xlab="datetime",
ylab="Global_reactive_power")
dev.off()
Sys.setlocale("LC_TIME","es_ES.UTF-8") #Changes the locale again to its original value
